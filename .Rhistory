library(SnowballC)
#Clean up the corpus- change case to lower, remove punctuation and remove 'stopwords'
tweetCorpus<- tm_map(tweetCorpus, tolower)
tweetCorpus<- tm_map(tweetCorpus, removePunctuation)
tweetCorpus<- tm_map(tweetCorpus, removeWords, stopwords('english'))
tweetTDM<- TermDocumentMatrix(tweetCorpus)
tweetCorpus<- tm_map(tweetCorpus, tolower)
tweetCorpus<- tm_map(tweetCorpus, removePunctuation)
tweetCorpus<- tm_map(tweetCorpus, removeWords, stopwords('english'))
tweetTDM<- TermDocumentMatrix(tweetCorpus)
install.packages("SnowballC")
install.packages("SnowballC")
library("SnowballC")
tweetCorpus<- tm_map(tweetCorpus, tolower)
tweetCorpus<- tm_map(tweetCorpus, removePunctuation)
tweetCorpus<- tm_map(tweetCorpus, removeWords, stopwords('english'))
# A function to install and load a package if not present
EnsurePackage<-function(x)
{
x<- as.character(x)
if(!require(x,character.only=TRUE))
{install.packages(pkgs=x,repos="http://cran.r-project.org")
require(x,character.only=TRUE)}
}
# A function to prepare all necerserry packages for the twitteR function to be used
PrepareTwitter<-function()
{
EnsurePackage("bitops")
EnsurePackage("RCurl")
EnsurePackage("RJSONIO")
EnsurePackage("twitteR")
EnsurePackage("ROAuth")
}
# Create a data fram of the restults of a search of twitter,
TweetFrame<-function(searchTerm, maxTweets)
{
twtList<-
searchTwitter(searchTerm, maxTweets)
return(do.call("rbind", lapply (twtList,as.data.frame)))
}
#Load "stringr" package
EnsurePackage("stringr")
PrepareTwitter()
credential<-OAuthFactory$new(consumerKey="kHSbnkE9U3uPLUCcjXw6bIZuK",
consumerSecret="zOL0LBgv03kNIrm8NS2OIJLZKPbFjJb01Lk2ydOs61kTuS8Ucl",
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
credential$handshake()
registerTwitterOAuth(credential)
TweetFrame<-function(searchTerm, maxTweets)
{
twtList<-
searchTwitter(searchTerm, maxTweets)
return(do.call("rbind", lapply (twtList,as.data.frame)))
}
tweetDF<-TweetFrame("#TDF2014", 10000)
CleanTweets<-function(tweets)
{
#Remove redundant spaces
tweets <- str_replace_all (tweets,"  "," ")
#Get rid of URLs
tweets<- str_replace_all(tweets,"http://t.co/[a-z,A-Z,0-9]{8}","")
#get rid of retweet header
tweets<- str_replace (tweets,"RT @[a-z,A-Z]*","")
#Get rid of hashtags
tweets<- str_replace_all (tweets,"#[a-z,A-Z]*","")
#Get rid of references to other screennames
tweets<- str_replace_all (tweets,"@[a-z,A-Z]*","")
return(tweets)
}
#Create a vector of text outside of tweet data frame
cleanText <-tweetDF$text
# Run the CleanTweets Function to clean up the text
cleanText<- CleanTweets(cleanText)
#view head of list
head(cleanText)
EnsurePackage("tm")
tweetCorpus<- Corpus(VectorSource(cleanText))
tweetCorpus
EnsurePackage("SnowballC")
tweetCorpus<- tm_map(tweetCorpus, tolower)
tweetCorpus<- tm_map(tweetCorpus, removePunctuation)
tweetCorpus<- tm_map(tweetCorpus, removeWords, stopwords('english'))
tweetTDM<- TermDocumentMatrix(tweetCorpus)
tweetTDM
print(tweetCorpus)
inspect(tweetCorpus)
cleanText<- CleanTweets(cleanText)
head(cleanText)
tweetCorpus<- Corpus(VectorSource(cleanText))
tweetCorpus<- tm_map(tweetCorpus, tolower)
tweetCorpus<- tm_map(tweetCorpus, removePunctuation)
inspect(tweetCorpus)
tweetCorpus<- Corpus(VectorSource(cleanText))
tweetCorpus
tweetCorpus<- tm_map(tweetCorpus, tolower)
inspect(tweetCorpus)
tweetCorpus<- Corpus(VectorSource(cleanText))
tweetCorpus
tweetCorpus<- tm_map(tweetCorpus, tolower)
tweetCorpus<- tm_map(tweetCorpus, tolower, mc.cores=1)
tweetCorpus<- tm_map(tweetCorpus, removePunctuation, mc.cores=1)
tweetCorpus<- tm_map(tweetCorpus, removeWords, stopwords('english'), mc.cores=1)
setwd("./Documents/Coursera/GettingandCleaningData/project")
# Read training data
trainingData <- read.table("./data/train/X_train.txt")
trainingLables <- read.table("./data/train/y_train.txt")
trainingSubjects <- read.table("./data/train/subject_train.txt")
# Read test data
testData <- read.table("./data/test/X_test.txt")
testLabels <- read.table("./data/test/y_test.txt")
testSubjects <- read.table("./data/test/subject_test.txt")
dim(trainingData)
dim(trainingLabels)
dim(trainingLables)
dim(trainingSubjects)
dim(testData)
rm(trainingLables)
trainingLabels <- read.table("./data/train/y_train.txt")
allData <- rbind(trainingData,testData)
allLabels <- rbind(trainingLabels,testLabels)
allSubjects <- rbind(trainingSubjects,testSubjects)
?gsub
dataFeatures <- read.table("./data/features.txt")
head(dataFeatures)
sdmean <- grep("mean"|"std",dataFeatures[,2], ignore.case = T, value = T)
sdmean <- grep("mean|std",dataFeatures[,2], ignore.case = T, value = T)
head(sdmean)
dim(sdmean)
sdmean
sdmean <- grep("mean\\(\\)|std\\(\\)",dataFeatures[,2], ignore.case = T, value = T)
sdmean
sdmean <- grep("mean\\(\\)|std\\(\\)",dataFeatures[,2], ignore.case = F)
sdmean
requiredData <- allData[,sdmean]
dim(requiredData)
?gsub
names(requiredData)
?colnames
colnames(requiredData) <- dataFeatures[sdmean,2]
colnames(requiredData)
?gsub
colnames(requiredData) <- gsub("-","",colnames(requiredData))
colnames(requiredData)
colnames(requiredData) <- gsub("mean","Mean",colnames(requiredData))
colnames(requiredData) <- gsub("std","STD",colnames(requiredData))
colnames(requiredData) <- gsub("\\(\\)","",colnames(requiredData))
colnames(requiredData)
colnames(requiredData) <- gsub("BodyBody","Body",colnames(requiredData))
colnames(requiredData)
head(allLabels)
tail(allLabels)
ls()
activityLabels <- read.table("./data/activity_labels.txt")
activityLabels
?substr
?gsub
activityLabels[,2] <- gsub("-","",activityLabels[,2])
activityLabels
activityLabels[,2] <- gsub("-","",activityLabels[,2])
activityLabels
activityLabels[,2] <- gsub("_","",activityLabels[,2])
activityLabels[,2] <- gsub("_","",activityLabels[,2])
activityLabels
activityLabels[,2] <- tolower(activityLabels[,2])
activityLabels
substr(activityLabels[,2],8,8) <- toupper(substr(activityLabels[,2],8,8))
activityLabels
substr(activityLabels[c(2,3),2],8,8) <- toupper(substr(activityLabels[c(2,3),2],8,8))
activityLabels <- read.table("./data/activity_labels.txt")
activityLabels[,2] <- gsub("_","",activityLabels[,2])
activityLabels[,2] <- tolower(activityLabels[,2])
substr(activityLabels[c(2,3),2],8,8) <- toupper(substr(activityLabels[c(2,3),2],8,8))
activityLabels
substr(activityLabels[,2],1,1) <- toupper(substr(activityLabels[,2],1,1))
activityLabels
activLab <- actibityLabels[allLabels[,1],2]
activLab <- activityLabels[allLabels[,1],2]
head(activLab)
tail(activeLab)
tail(activLab)
str(activeLab)
str(activLab)
activLab <- activityLabels[allLabels[,1],2]
allLabels[,1] <- activeLab
colnames(allLables) <- "activity"
activLab <- activityLabels[allLabels[,1],2]
allLabels[,1] <- activeLab
allLabels[,1] <- activLab
colnames(allLabels) <- "activity"
head(allLabels)
collnames(allSubjects) <- "subject"
colnames(allSubjects) <- "subject"
head(allSubjects)
outputData <- cbind(allData,allLabels,allSubjects)
head(outputData)
outputData <- cbind(requiredData,allLabels,allSubjects)
head(outputData)
head(outputData)
write.table(outputData, file = "tidydata.txt", row.names = F)
head(outputData)
head(outputData, 1:20)
head(outputData, 20)
meanData <- data.frame()
colnames(meanData) <- colnmaes(outputData)
meanData <- data.frame()
colnames(meanData) <- colnames(outputData)
rm(meanData)
length(allSubjects)
dim(allSubjects)
summary(allSubjects)
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject == i,]
singleSubjectMeans <- by(data = singleSubject, INDICES = as.factor(activity),FUN = colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject == i,]
singleSubjectMeans <- by(data = singleSubject, INDICES = as.factor(outputData$activity),FUN = colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject == i,]
singleSubjectMeans <- by(data = singleSubject, INDICES = as.factor(outputData$activity),FUN = colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject == i,]
singleSubjectMeans <- by(data = singleSubject, INDICES = as.factor(singleSubject$activity),FUN = colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectMeans <- by(data = singleSubject, INDICES = as.factor(singleSubject$activity),FUN = colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectMeans <- lapply(singleSubject, colMeans, by(as.factor(singleSubject$activity)))
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectMeans <- sapply(split(singleSubject,as.factor(singleSubject$activity))colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectMeans <- aggregate(singleSubject,by = singleSubject$activity,colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
meanData <- data.frame()
for (i in 1:30){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectMeans <- aggregate(singleSubject,by = as.list(singleSubject$activity),colMeans)
meanData <- rbind(meanData, singleSubjectMeans)
}
allLabels
activityLabels
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectMeans <- colMeans(singleSubjectActivity)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,-c(activity,subject)]
singleSubjectMeans <- colMeans(singleSubjectActivity)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
singleSubject
singleSubjectActivity
ncol(outputData)
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
head(meanData)
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$activity <- j
singleSubjectMeans$subject <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
warnings()
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$activity <- NA
singleSubjectMeans$activity <- j
singleSubjectMeans$subject <- NA
singleSubjectMeans$subject <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
actPart<- data.frame(activity=j,subject=i)
singleSubjectMeans <- cbind(singleSubjectMeans,actPart)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData
rm(meanData)
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
actPart<- data.frame(activity=j,subject=i)
singleSubjectMeans <- cbind(singleSubjectMeans,actPart)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
meanData <- rbind(meanData, singleSubjectMeans)
print(i)
print(j)
}
}
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$activity <- NA
singleSubjectMeans$activity <- j
singleSubjectMeans$participant <- NA
singleSubjectMeans$participant <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$activity <- j
singleSubjectMeans$participant <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j & outputData$subject %in% i,]
singleSubjectMeans <- colMeans(singleSubjectActivity[,1:66])
meanData <- rbind(meanData, singleSubjectMeans)
}
}
warnings()
meanData
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubjectActivity <- singleSubject[singleSubject$activity == j & outputData$subject == i,]
singleSubjectMeans <- colMeans(singleSubjectActivity[,1:66])
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubjectActivity <- singleSubject[singleSubject$activity == j & outputData$subject == i,]
singleSubjectMeans <- colMeans(singleSubjectActivity[,1:66])
meanData <- rbind(meanData, singleSubjectMeans)
}
}
warnings()
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$activity <- j
singleSubjectMeans$participant <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
warnings()
meanData
### Create second data set with average for each variable and participant
meanData <- data.frame()
for (i in 1:30){
for ( j in as.list(activityLabels[,2])){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$activity <- j
singleSubjectMeans$participant <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
head(meanData)
meandData$activity <- rep(activityLabels[,2])
meanData$activity <- rep(activityLabels[,2])
meanData
write.table(meanData, file = "meanData.txt", row.names = F)
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$activity <- NA
singleSubjectMeans$participant <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData$activity <- rep(activityLabels[,2])
warnings()
meanData <- data.frame()
for (i in 1:30){
for ( j in activityLabels[,2]){
singleSubject <- outputData[outputData$subject %in% i,]
singleSubjectActivity <- singleSubject[singleSubject$activity %in% j,]
singleSubjectActivity <- singleSubjectActivity[,1:66]
singleSubjectMeans <- colMeans(singleSubjectActivity)
singleSubjectMeans$participant <- i
meanData <- rbind(meanData, singleSubjectMeans)
}
}
meanData$activity <- rep(activityLabels[,2])
warnings()
meanData
